version: 2
jobs:
  build:
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 18.09.3
      - run:
          name: Install pre-reqs (Terraform/Docker/etc)
          command: |
            export TF_VERSION="0.12.3"
            export DOCKER_VER="18.09.3"
            apt-get update && apt-get -y install curl unzip gnupg2 procps jq curl python-pip
            curl -skO -L https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
            curl -L -o /tmp/docker-$DOCKER_VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VER.tgz
            unzip -o terraform_${TF_VERSION}_linux_amd64.zip -d /usr/local/bin/
            tar -xz -C /tmp -f /tmp/docker-$DOCKER_VER.tgz
            mv /tmp/docker/* /usr/bin
            docker version ## Gets version of client AND Server
            pip --version
            pip install awscli --upgrade
            terraform --version
            aws --version
            mkdir -p /tmp/artifacts ## Making the artifacts dir, not sure why I need to.
      - run:
          name: Run Terraform plan
          command: |
            terraform init
            terraform plan -out=terraform.tfplan
            terraform apply -auto-approve
            terraform output -json > terraform-output.json
            terraform state pull > terraform-state.tfstate
            cp -v terraform.tfplan terraform-output.json terraform-state.tfstate /tmp/artifacts
      - run:
          name: Build Docker image
          command: |
            ls -l /tmp/artifacts
            ECR_REPO=$(cat /tmp/artifacts/terraform-output.json | jq -r '.ecr_registry_url.value')
            cd docker && docker build -t example-repo-s3-put .
            echo "Using: ${ECR_REPO}"
            $(aws ecr get-login --no-include-email --region eu-west-1)
            docker tag example-repo-s3-put:latest ${ECR_REPO}:latest
            docker push ${ECR_REPO}:latest
            docker tag example-repo-s3-put:latest ${ECR_REPO}:${CIRCLE_SHA1}
            docker push ${ECR_REPO}:${CIRCLE_SHA1}
      # - run:
      #     name: Install ruby stuff + TF Kitchen
      #     command: |
      #       mkdir ~/.gnupg && echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
      #       gpg2 --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
      #       curl -sSL https://rvm.io/mpapis.asc | gpg2 --import -
      #       curl -sSL https://get.rvm.io | bash -s stable
      #       source /etc/profile.d/rvm.sh
      #       rvm requirements
      #       rvm install 2.4.1
      #       rvm use 2.4.1 --default
      #       ruby --version
      #       gem install kitchen-terraform
      # - run:
      #     name: Move test result files into tests path
      #     command: |
      #       find /var/lib/gems/ -name mkmf.log -exec cp "{}" /tmp/ruby_logs \;
      #     when: on_fail

      - store_artifacts:
          path: /tmp/artifacts
